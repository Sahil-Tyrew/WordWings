name: Build & Release Windows Installer

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install Python 3.11
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Install pip + project deps
      - name: Install Python dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # 4. Build the standalone EXE
      - name: Build standalone EXE
        shell: pwsh
        run: |
          pyinstaller --onefile --windowed --add-data "config.ini;." --name WordWings wordwings.py

      # 5. Download & silently unpack the portable Inno Setup installer
      - name: Install Inno Setup (portable)
        shell: pwsh
        run: |
          $url = 'https://jrsoftware.org/download.php/is-unicode-portable.exe'
          Invoke-WebRequest $url -OutFile 'innosetup-portable.exe'
          Start-Process .\innosetup-portable.exe `
            -ArgumentList '/VERYSILENT','/SUPPRESSMSGBOXES','/DIR=C:\InnoSetup' -Wait

      # 6. Generate the Inno Setup script via PowerShell here-string
      - name: Generate installer.iss
        shell: pwsh
        run: |
          $iss = @'
[Setup]
AppName=WordWings
AppVersion=${{ github.ref_name }}
DefaultDirName={pf}\WordWings
DefaultGroupName=WordWings
OutputDir=.
OutputBaseFilename=WordWingsSetup
Compression=lzma
SolidCompression=yes

[Files]
Source: "dist\WordWings.exe"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
Name: "{group}\WordWings"; Filename: "{app}\WordWings.exe"
Name: "{commondesktop}\WordWings"; Filename: "{app}\WordWings.exe"

[Run]
Filename: "{app}\WordWings.exe"; Description: "Launch WordWings"; Flags: nowait postinstall skipifsilent
'@
          $iss | Set-Content installer.iss -Encoding ASCII

      # 7. Compile the NSIS installer using ISCC.exe from the portable install
      - name: Compile Windows installer
        shell: pwsh
        run: |
          & 'C:\InnoSetup\ISCC.exe' installer.iss

      # 8. Publish a GitHub Release with all three assets
      - name: Publish Release & Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: WordWings ${{ github.ref_name }}
          files: |
            dist/WordWings.exe
            WordWingsSetup.exe
            WordWings-final.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
